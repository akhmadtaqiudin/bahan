

<project name="Survey OM (Chapter 9)" default="test" basedir=".">

  <!-- Give user a chance to override without editing this file or typing -D -->
  <property file="build.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <!-- Name of project and version, used to create filenames -->
  <property name="name" value="survey-om"/>
  <property name="version" value="chapter9"/>
    
  <!-- set global properties for this build -->
  <property name="src.dir" value="src/java"/>
  <property name="test.src.dir" value="src/test"/>
  <property name="etc.dir" value="etc"/>
  <property name="lib.dir" value="lib"/>
  <property name="build.dir" value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
   
 
  <path id="lib.class.path">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <patternset id="jar.files">
    <include name="**/*.xml"/>
    <include name="**/*.properties"/>
  </patternset>



  <!-- Targets Available -->

  <target name="clean" description="Cleans up directories">
    <delete dir="${build.dir}"/>
  </target>



  <target name="init"  description="Initialize the build">
    
    <echo message="Build ${name}-${version}"/>

    <mkdir dir="${classes.dir}"/>
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}">
        <patternset refid="jar.files"/>
      </fileset>
    </copy>

  </target>

  <target name="compile" depends="init" description="Compile the Java source code">  
    <javac
      srcdir="${src.dir}" 
      destdir="${classes.dir}"
      classpathref="lib.class.path" 
      debug="${javac.debug}"
      optimize="${javac.optimize}"
      nowarn="on">
    </javac>
  </target>
 
  <target name="compile-tests" depends="init,compile" description="Compile the Java test code">  
    <javac
      srcdir="${test.src.dir}" 
      destdir="${classes.dir}"
      classpathref="lib.class.path" 
      debug="${javac.debug}"
      optimize="${javac.optimize}"
      nowarn="on">
    </javac>
  </target>   

  <target name="test" depends="compile-tests" description="Run unit tests">  
    
    <mkdir dir="${build.dir}/test-reports"/>
    
    <junit 
      printSummary="true" 
      fork="false">
        <formatter type="xml"/>
        <formatter type="brief" usefile="false"/>      
        <classpath>
          <pathelement location="${classes.dir}"/>
          <path refid="lib.class.path"/>
        </classpath>    

        <batchtest todir="${build.dir}/test-reports">
          <fileset dir="${classes.dir}">
              <include name="**/*Test*"/>            
          </fileset>
        </batchtest>
    </junit>
  </target> 
  
  
  
</project>
